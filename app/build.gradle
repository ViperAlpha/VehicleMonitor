apply plugin: 'com.android.application'
apply from: "$rootProject.projectDir/buildsystem/libs.gradle"
apply from: "$rootProject.projectDir/buildsystem/config.gradle"
apply from: "$rootProject.projectDir/buildsystem/appversion.gradle"

def config = ext.configurations
def dp = ext.libVersions

android {
    compileSdkVersion config.compileSdkVersion
    buildToolsVersion config.buildToolsVersion

    defaultConfig {
        applicationId config.applicationId

        versionCode buildVersionCode()
        versionName project.versionName
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion

        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }


    signingConfigs {
        debug {
            storeFile file("keystore/debug.keystore")
        }
        // Notice the production keystore and password are not checked in. Signing resources for
        // release builds are typically stored somewhere more secure than the source repo.
        // This typically also means that release builds are signed manually rather than by
        // Gradle.
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled true
            useProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"

    productFlavors {
        mock {
            dimension "default"
            targetSdkVersion config.targetSdkVersion
        }

        targetSdk22 {
            dimension "default"
            targetSdkVersion 22
        }

        irrisimples {
            dimension "default"
            targetSdkVersion config.targetSdkVersion
        }
    }

    packagingOptions {
        // Exclude files to avoid packaging collisions (same file name in multiple dependencies).
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE-FIREBASE.txt'
        exclude 'META-INF/NOTICE'
    }

    // Test Android jar comes with unimplemented methods that throw exceptions by default. This
    // option forces the methods to return default values instead. Required for static methods,
    // such as TextUtils, as those cannot be mocked with Mockito.
    // Refer http://tools.android.com/tech-docs/unit-testing-support#TOC-Method-...-not-mocked.-
    testOptions {
        unitTests.returnDefaultValues = true
    }
}


dependencies {

    //retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'

    // React
    implementation "io.reactivex.rxjava2:rxandroid:$dp.rxAndroid"
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    implementation "io.reactivex.rxjava2:rxjava:$dp.rxJava"
    implementation "com.jakewharton.rxbinding2:rxbinding-appcompat-v7:$dp.rxBindingUtils"

    // DI
    implementation "com.google.dagger:dagger:$dp.dagger2"
    implementation "com.google.dagger:dagger-android-support:$dp.dagger2" // if you use the support libraries
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    annotationProcessor "com.google.dagger:dagger-android-processor:$dp.dagger2"
    annotationProcessor "com.google.dagger:dagger-compiler:$dp.dagger2"

    // android support
    implementation "com.android.support.constraint:constraint-layout:$dp.androidSupportConstraint"
    implementation "com.android.support:appcompat-v7:$dp.androidSupport"
//    implementation "com.android.support:preference-v14:$dp.androidSupport"
    implementation "com.android.support:recyclerview-v7:$dp.androidSupport"
//    implementation "com.android.support:cardview-v7:$dp.androidSupport"
    implementation "com.android.support:design:$dp.androidSupport"
//    implementation "com.android.support:support-v4:$dp.androidSupport"
//    implementation "com.android.support:support-vector-drawable:$dp.androidSupport"

    // Android Architecture Components
//    implementation "android.arch.lifecycle:extensions:$dp.lifeCycleExtensions"

    // http network
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'

    // flexbox
    implementation "com.google.android:flexbox:$dp.flexbox"

    // Error Reporting
    implementation("com.crashlytics.sdk.android:crashlytics:$dp.crashlytics@aar") {
        transitive = true
    }

    // Memory Leak detection
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$dp.leakCanary"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$dp.leakCanary"

    // Testing

    // Local Unit Test
    testImplementation "junit:junit:$dp.junitVersion"

    // Android Testing
    androidTestImplementation "com.android.support.test:runner:$dp.runnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$dp.espressoVersion"
}

apply from: "$rootProject.projectDir/buildsystem/outputNaming.gradle"